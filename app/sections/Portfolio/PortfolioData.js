export const portfolioData = [
  {
    id: "smartzer",
    title: "Smartzer",
    index: 0,
    imgDesktop: "/projects/citiquiz/carousel-desktop.webp",
    imgMobile: "/projects/citiquiz/carousel-mobile.webp",
    imgThumbnail: "/projects/citiquiz/carousel-thumbnail.webp",
    mockupIphone: "/projects/citiquiz/mockup-iphone.webp",
    mockupIpad: "/projects/citiquiz/mockup-ipad.webp",
    mockupImac: "/projects/citiquiz/mockup-imac.webp",
    overview:
      "Platform for creating interactive, shoppable videos and livestreams to achieve stronger user engagement and drive sales.",
    linkWebsite: "https://citiquiz.netlify.app/",
    linkGithub: "https://github.com/Patryk-Polanski/citi-quiz",
    categories: ["UX/UI", "Frontend", "Backend"],
    techStack: [
      "figma",
      "styled-components",
      "scss",
      "javascript",
      "react",
      "typescript",
      "tanstack-query",
      "redux",
      "react-router",
      "node",
      "express",
    ],
    challenge: ["TODO: Describe Smartzer app"],
    gallery: [
      { src: "/projects/citiquiz/gallery-collage.webp" },
      { src: "/projects/citiquiz/gallery-tablets.webp" },
      { src: "/projects/citiquiz/gallery-laptops.webp" },
      { src: "/projects/citiquiz/gallery-phones.webp" },
    ],
  },
  {
    id: "citi-quiz",
    title: "CitiQuiz",
    index: 1,
    imgDesktop: "/projects/citiquiz/carousel-desktop.webp",
    imgMobile: "/projects/citiquiz/carousel-mobile.webp",
    imgThumbnail: "/projects/citiquiz/carousel-thumbnail.webp",
    mockupIphone: "/projects/citiquiz/mockup-iphone.webp",
    mockupIpad: "/projects/citiquiz/mockup-ipad.webp",
    mockupImac: "/projects/citiquiz/mockup-imac.webp",
    overview:
      "A free, open-source tool designed to help British citizenship applicants prepare for the 'Life in the UK' test.",
    linkWebsite: "https://citiquiz.netlify.app/",
    linkGithub: "https://github.com/Patryk-Polanski/citi-quiz",
    categories: ["UX/UI", "Frontend", "Backend"],
    techStack: [
      "figma",
      "tailwind",
      "javascript",
      "react",
      "typescript",
      "tanstack-query",
      "redux",
      "react-router",
      "firebase",
    ],
    challenge: [
      "Applying for a British citizenship requires completing the “Life in the UK” test, which is a quiz comprising of 24 questions that test the applicants knowledge of the British history, culture and customs. Having completed the test myself, I've experienced a couple of frustrations with the learning tools that were available on the market - official apps were paid and were either available on phones or personal computers. Free versions were under maintained and felt clunky. Additionally, I wanted to be able to keep a reference of all the questions I failed to help me find gaps in my knowledge and better memorise the correct answers. Knowing that a few of my acquaintances were preparing for the Life in the UK test as well, I decided to develop an open source tool to facilitate this learning process.",

      "I started with gathering ideas for the layout, functionality and design for the web app. In Figma, I created mood boards and mockups which were later turned into fully fleshed designs. For the front-end, I've decided to choose a tech stack I am most familiar with, which is React with TypeScript and Tailwind to speed up styling. React Router was used to manage routes and Tanstack Query was added for better data fetching workflow. Even though Redux was not necessary, I decided to incorporate it into the project to practice creating slices and dispatching actions. The backend of the web app is powered by the Google Firebase services. Firebase is used as a database along with Firebase authentication that allows users to create accounts. Signing up is optional and the tool is still usable without an account - user data/statistics are instead managed in Local storage in this case. CitiQuiz is fully responsive and can be used on all devices.",
    ],
    gallery: [
      { src: "/projects/citiquiz/gallery-collage.webp" },
      { src: "/projects/citiquiz/gallery-tablets.webp" },
      { src: "/projects/citiquiz/gallery-laptops.webp" },
      { src: "/projects/citiquiz/gallery-phones.webp" },
    ],
  },
  {
    id: "descripti",
    title: "Descripti",
    index: 2,
    imgDesktop: "/projects/descripti/carousel-desktop.webp",
    imgMobile: "/projects/descripti/carousel-mobile.webp",
    imgThumbnail: "/projects/descripti/carousel-thumbnail.webp",
    mockupIphone: "/projects/descripti/mockup-iphone.webp",
    mockupIpad: "/projects/descripti/mockup-ipad.webp",
    mockupImac: "/projects/descripti/mockup-imac.webp",
    overview:
      "Content generation tool leveraging chatGPT to generate product titles, descriptions and metadata.",
    linkWebsite: "https://descripti.ai/",
    categories: ["Frontend"],
    techStack: ["tailwind", "javascript", "react", "next", "typescript"],
    challenge: [
      "With the release of ChatGPT and a popular rise of AI apps, my team noticed a good opportunity for utilising such tools to create unique and powerful products. Being in the E-commerce and Shopify business, we came up with a concept to leverage AI to help store merchants generate high quality content for each product, including titles, descriptions and metadata. How this would work is the user would select a number of options, including tone, keywords, personas and the app would make use of chat GPT api to generate multiple responses. After initial brainstorming sessions, I was assigned to developing the frontend of the application with React/Next.js and was provided with the initial designs.",

      "I started with building the promotional landing pages for the application and later moved onto working on the app itself. Even though most designs were complete, as this was an internal project without a client, I was still able to contribute to the overall app aesthetics with my own ideas. Among others, I was in charge of developing the sidebar, tabbable content, making reusable card components and creating form elements with client side validation. Tailwind and TypeScript helped create a cleaner, more manageable codebase both for styles and JavaScript/React logic. While the backend was still being implemented using Supabase and Vercel, I was working on API endpoints and later moved onto using the Cypress testing library to run tests for the front end of the app. Having multiple developers working on the project, it was completed moderately quickly and at the time of writing, it is accepting new users for early access. Screenshots of the app can be seen in the gallery below.",
    ],
    gallery: [
      { src: "/projects/descripti/gallery-collage.webp" },
      { src: "/projects/descripti/gallery-tablets.webp" },
      { src: "/projects/descripti/gallery-laptops-1.webp" },
      { src: "/projects/descripti/gallery-laptops-2.webp" },
    ],
  },
  {
    id: "vape-superstore",
    title: "Vape Superstore",
    index: 3,
    imgDesktop: "/projects/vape-superstore/carousel-desktop.webp",
    imgMobile: "/projects/vape-superstore/carousel-mobile.webp",
    imgThumbnail: "/projects/vape-superstore/carousel-thumbnail.webp",
    mockupIphone: "/projects/vape-superstore/mockup-iphone.webp",
    mockupIpad: "/projects/vape-superstore/mockup-ipad.webp",
    mockupImac: "/projects/vape-superstore/mockup-imac.webp",
    overview:
      "E-commerce site built from grounds up to help the client scale and optimize their vaping business.",
    linkWebsite: "https://www.vapesuperstore.co.uk/",
    categories: ["Frontend", "CMS"],
    techStack: ["css", "scss", "javascript", "shopify"],
    challenge: [
      "The Vape Superstore project was the most complex e-commerce site I've had a chance to work on. It presented unique challenges and a demanding list of requirements. Apart from an extensive catalogue of products, each with multiple variants, the website required additional custom functionality added on top of Shopify. Such extra features were product bundles, custom search, members points and a modified checkout. The first stages of the project revolved around analysing all the requirements and studying provided UI/UX designs to form an overall vision for the website.",

      "At the beginning I was responsible for setting up the structure/system of the project. This included creating a folder structure for JS and SCSS, establishing base styles, implementing typography/fonts and adding the colour scheme. After settings up a Git repository, I was then assigned to developing the front-end of the site and creating schema in the Shopify editor to enable the client to edit all content. I have developed all the sections on the homepage and created the majority of pages. The most difficult tasks proved to be the header with the mega menu, the account page with custom features as well as the product page, which has grown to be quite complex with all the different product variants, popups and custom bundles.",
    ],
    gallery: [
      { src: "/projects/vape-superstore/gallery-collage.webp" },
      { src: "/projects/vape-superstore/gallery-phones.webp" },
      { src: "/projects/vape-superstore/gallery-tablets.webp" },
      { src: "/projects/vape-superstore/gallery-laptops.webp" },
    ],
  },
  {
    id: "cascades",
    title: "Cascades",
    index: 4,
    imgDesktop: "/projects/cascades/carousel-desktop.webp",
    imgMobile: "/projects/cascades/carousel-mobile.webp",
    imgThumbnail: "/projects/cascades/carousel-thumbnail.webp",
    mockupIphone: "/projects/cascades/mockup-iphone.webp",
    mockupIpad: "/projects/cascades/mockup-ipad.webp",
    mockupImac: "/projects/cascades/mockup-imac.webp",
    overview:
      "Custom WordPress blog to help the client manage and promote their consortium of charitable organisations.",
    linkWebsite: "https://www.cascades.eu/",
    categories: ["Frontend", "CMS"],
    techStack: ["css", "scss", "javascript", "wordpress"],
    challenge: [
      "Prior to working on Cascades, I was always working in a small team and have been focusing on building out individual front-end sections on WordPress sites. This time, I was mainly working by myself and have been assigned a much larger pool of responsibilities. Apart from building out front-end sections, I was also in charge of organising the content on WordPress and querying all the data with PHP. After having received the designs and gone through the project with a senior developer, I began setting up the site.",

      "At first I was focusing on the back-end and the structure of content in WordPress. As the WordPress editor would be later used by the client, I needed to ensure that the data entry for all content is logical and well organised. To make data entry more powerful and flexible, I've used a popular plugin called Advanced Custom Fields. With all the initial content added, I then outputted and looped through the data with PHP. Styling and making the site responsive was the last task, which I achieved with the usual SCSS workflow. During the whole process I was gathering feedback from my supervisor and in the later stages of the project, the client also got involved with the feedback process.",
    ],
    gallery: [
      { src: "/projects/cascades/gallery-collage.webp" },
      { src: "/projects/cascades/gallery-phones.webp" },
      { src: "/projects/cascades/gallery-tablets.webp" },
      { src: "/projects/cascades/gallery-laptops.webp" },
    ],
  },
  {
    id: "tiker",
    title: "Tiker",
    index: 5,
    imgDesktop: "/projects/tiker/carousel-desktop.webp",
    imgMobile: "/projects/tiker/carousel-mobile.webp",
    imgThumbnail: "/projects/tiker/carousel-thumbnail.webp",
    mockupIphone: "/projects/tiker/mockup-iphone.webp",
    mockupIpad: "/projects/tiker/mockup-ipad.webp",
    mockupImac: "/projects/tiker/mockup-imac.webp",
    overview:
      "A web app for traders to assist with analysing trading performance using various tools including a trading journal and data visualisations.",
    linkWebsite: "https://tiker.netlify.app/",
    linkGithub: "https://github.com/Patryk-Polanski/Tiker",
    linkVideo: "https://vimeo.com/538930971",
    projectLogin: "username: trader, password: app",
    categories: ["UI/UX", "Frontend"],
    techStack: ["figma", "photoshop", "css", "scss", "javascript", "d3"],
    challenge: [
      "For my final year project at university, I decided to pursue a project idea that would be heavily focused on data analysis and user generated data. The reason for this was to allow me to practice JavaScript and dive deeper into data structures concepts. I settled on creating a web app for web traders to analyse trading performance, which worked by entering each trade information and seeing the results in various data visualisations. The web app also consisted of other features, such as a trading journal and a number of helpful calculators/tools. As this was an individual project, I was in charge of all stages of the project, from research and designs to final implementation and user testing.",

      "The initial phase revolved around carrying out an extensive research, both in terms of the potential app aesthetics as well as the technological side, i.e. the most suitable tech stack for the application. The research stage also involved around exploring the target audience, establishing user flows and mapping out the timeline for the project. Branding, sketches, wireframes and high fidelity designs were the following tasks that went through a few iterations as the project progressed. Having had little prior experience with so much data flowing within a codebase, creating a robust data structure for all the data proved to be a tough task. I needed to find a suitable solution to storing all the information that would be easy to query or loop over.",

      "Programming the idea was significantly the most time consuming and difficult operation. To help me organise the project and streamline some aspects, I’ve decided to use numerous tools, including Parcel and Babel for optimisation and compilation, sass for superior styling and D3 for data visualisations. As a starting point, I styled and made the application responsive. Then, I implemented basic functionality such as switching between the pages and logging in. Adding all the charts and graphs using 3D.js was quite complex and fiddly at times, but eventually I managed to replicate my designs. Up to this point the app was working with static data, which now required a layer of logic to connect user input with visualisations. All the JavasScript was organised using the MVC (Model View Controller) pattern. During the remaining few weeks, I focused on user testing, writing the tedious and lengthy dissertation, as well as ironing an abundance of bugs that kept popping out, especially for data computation. Unfortunately I was unable to add a database due to running out of time as the project had to be handed in a working state on time.",
    ],
    gallery: [
      { src: "/projects/tiker/gallery-collage.webp" },
      { src: "/projects/tiker/gallery-tablets.webp" },
      { src: "/projects/tiker/gallery-laptops-1.webp" },
      { src: "/projects/tiker/gallery-laptops-2.webp" },
    ],
  },
];
